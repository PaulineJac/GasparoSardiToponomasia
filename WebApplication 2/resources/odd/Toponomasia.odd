<?xml-model href="teipublisher_odds.xsd"?><TEI xmlns="http://www.tei-c.org/ns/1.0" xmlns:pb="http://teipublisher.com/1.0" xml:lang="en">
    <teiHeader>
        <fileDesc>
            <titleStmt>
                <title>Toponomasia

                 <desc>16th c. manuscript</desc>
                </title>
            </titleStmt>
            <publicationStmt>
                <publisher>eXistSolutions GmbH</publisher>
                <availability>
                    <licence target="https://www.gnu.org/licenses/gpl-3.0.en.html">Distributed under GNU General Public License</licence>
                    <p>Copyright 2017 <ref target="http://existsolutions.com">eXistSolutions GmbH</ref>
                    </p>
                    <p>This program is free software: you can redistribute it and/or modify
                        it under the terms of the GNU General Public License as published by
                        the Free Software Foundation, either version 3 of the License, or
                        (at your option) any later version.</p>
                    <p>This program is distributed in the hope that it will be useful,
                        but WITHOUT ANY WARRANTY; without even the implied warranty of
                        MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
                        GNU General Public License for more details.</p>
                </availability>
            </publicationStmt>
            <sourceDesc>
                <p>Generated by <ref target="http://tei-publisher.com">TEI Publisher</ref>
                </p>
                <p>born digital</p>
            </sourceDesc>
        </fileDesc>
        <encodingDesc>
            <tagsDecl>
                <pb:behaviour ident="glossary" output="latex">
                    <pb:param name="id" value="@xml:id"/>
                    <pb:param name="name"/>
                    <pb:param name="note"/>
                    <pb:template>\newglossaryentry{[[id]]} {
                        name=[[name]],
                        description={[[note]]}
                    }</pb:template>
                </pb:behaviour>
            </tagsDecl>
        </encodingDesc>
        <revisionDesc>
            <change when="2018-08-31+02:00">Initial version</change>
        </revisionDesc>
    </teiHeader>
    <text>
        <body>
            <schemaSpec start="TEI teiCorpus" ident="Top" source="teipublisher.odd">
             <elementSpec ident="note" mode="change">
                    <model predicate="@type=&#34;annotation&#34;" behaviour="inline" cssClass="annotation">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                    <model predicate="@type='transcript'" behaviour="omit"/>
                    <model behaviour="note">
            <param name="place" value="@place"/>
            <param name="label" value="@n"/>
        </model>
                </elementSpec>
                
                <elementSpec ident="teiHeader" mode="change">
                    <model predicate="$parameters?header=&#34;commentary&#34;" behaviour="block">
            <param name="content" value="(./fileDesc/sourceDesc, ./fileDesc/titleStmt)"/>
        </model>
                    
                    <modelSequence predicate="$parameters?display='letter-header'">
           
            
            <model behaviour="block">
                <param name="content" value="fileDesc/titleStmt/title"/>
                <pb:set-param name="header" value="'short'"/>
            </model>
            <model behaviour="block">
                <param name="content" value=".//keywords[@scheme=&#34;http://briefedition.alfred-escher.ch/keywords&#34;]"/>
            </model>
        </modelSequence>
                    <model output="latex" behaviour="metadata"/>
                    <model output="fo" behaviour="omit"/>
                    <modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="block"/>
            <model behaviour="block" cssClass="subheading">
                <param name="id" value="substring-after(ancestor::TEI/@xml:id, 'K_')"/>
                <pb:template xmlns="" xml:space="preserve">AES B[[id]]</pb:template>
            </model>
            <model behaviour="block">
                <param name="content" value=".//keywords[@scheme=&#34;http://briefedition.alfred-escher.ch/keywords&#34;]"/>
            </model>
        </modelSequence>
                    <model output="web" behaviour="metadata"/>
                </elementSpec>
            <elementSpec ident="title" mode="change">
                    <model predicate="$parameters?header=&#34;commentary&#34; and parent::titleStmt" behaviour="heading" cssClass="letter-title">
            <param name="level" value="1"/>
        </model>
                    <model predicate="$parameters?header='context'" behaviour="inline"/>
                    <model predicate="$parameters?header='short'" behaviour="heading" cssClass="letter-title">
            <param name="level" value="2"/>
        </model>
                    <modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' — '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence>
                    <model predicate="not(@level) and parent::bibl" behaviour="inline"/>
                    <modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition xml:space="preserve">
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence>
                    <model behaviour="inline">
            <outputRendition xml:space="preserve">
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="TEI" mode="change">
                    <model output="latex" behaviour="section">
            <param name="header" value="teiHeader"/>
            <param name="title" value="teiHeader/fileDesc/titleStmt/title/node()"/>
            <param name="content" value=".//text/body"/>
            <param name="glossary" value="(teiHeader//particDesc/listPerson/person, teiHeader//settingDesc/listPlace/place)"/>
            <param name="styles" value="$config('latex-styles')"/>
            <pb:template>\documentclass[12pt, onecolumn,twoside,a4paper]{book}
\usepackage{ebgaramond}
\usepackage{graphicx}
\usepackage{amssymb}
\usepackage{xcolor}
\usepackage{microtype}
\usepackage{xspace}% gérer les espaces
\usepackage{amssymb}% symboles utiles (math, etc.)
\usepackage[normalem]{ulem} % souligner
\usepackage{alltt} % environnement "télétype"
\usepackage{setspace} % réglage des interlignes etc.
\usepackage{fancyhdr} % hauts et pieds de page
\usepackage{multicol} % texte sur plusieurs colonnes
\usepackage{fancybox} % boîtes améliorées
\usepackage{array} % tableaux
\usepackage{multirow} % les tableaux améliorés
\usepackage{url} % écrire les url
\usepackage{appendix} % annexes améliorées
\usepackage{geometry}
\usepackage{csquotes}
\usepackage{caption}
\captionsetup{font=footnotesize}
\usepackage{wrapfig}
\usepackage{hyperref}
\usepackage{ragged2e}
%%%%%%%%
\def\siecle#1{\textsc{\romannumeral#1}\textsuperscript{e}~siècle}
%%%%%%%
\pagestyle{fancyplain} \renewcommand{\chaptermark}[1]{% 
	\markboth{\chaptername\ \thechapter.\ #1}% 
	{\chaptername\ \thechapter.\ #1}} \renewcommand{\sectionmark}[1]{% 
	\markright{\thesection\ #1}}
% 
\lhead[\fancyplain{}{\bfseries\thepage}]%
{\fancyplain{}{\bfseries\nouppercase{\leftmark}}} 
\rhead[\fancyplain{}{\bfseries\nouppercase{\rightmark}}]%
{\fancyplain{}{\bfseries\thepage}} \fancyfoot{}
%%%%%%%%%%%%
%%%%%%%%%%%%
\newcommand{\phipaireblanche}
{\newpage{\pagestyle{empty}\cleardoublepage}} \newcommand{\phietc}{\textit{etc.}\xspace}
\newcommand{\phigg}[1]{\og #1 \fg}
%%%%%%%
\makeatletter
\newcommand{\finirphiimpaire}{\clearpage\if@twoside \ifodd\c@page
	\hbox{}\newpage\if@twocolumn\hbox{}\newpage\fi\fi\fi} \makeatother
\newcommand{\phiimpaireblanche}{% 
	\newpage{\pagestyle{empty}\finirphiimpaire}}
\renewcommand{\baselinestretch}{1,2}%%% interligne
\makeatother

%%%%%%%
%%%%%%
\makeatletter
\def\thickhrulefill{\leavevmode \leaders \hrule height 1ex \hfill \kern \z@}
\def\@makechapterhead#1{%
  \vspace*{10\p@}%
  {\parindent \z@ \raggedleft \reset@font
            \scshape \@chapapp{} \thechapter
        \par\nobreak
        \interlinepenalty\@M
    \Huge \bfseries #1\par\nobreak
    %\vspace*{1\p@}%
    \hrulefill
    \par\nobreak
    \vskip 100\p@
  }}
\def\@makeschapterhead#1{%
  \vspace*{10\p@}%
  {\parindent \z@ \raggedleft \reset@font
            \scshape \vphantom{\@chapapp{} \thechapter}
        \par\nobreak
        \interlinepenalty\@M
    \Huge \bfseries #1\par\nobreak
    %\vspace*{1\p@}%
    \hrulefill
    \par\nobreak
    \vskip 100\p@
  }}

\begin{document}

\setlength{\columnrulewidth}{0.2pt}
\setlength{\Lcolwidth}{0.425\textwidth}
\setlength{\Rcolwidth}{0.425\textwidth}
\columnsposition{C}
\numberlinefalse

[[header]]

[[content]]

\end{document}</pb:template>
        </model>
                    <model behaviour="document"/>
                </elementSpec>
                <elementSpec ident="p" mode="change">
                    <model output="latex" behaviour="paragraph"/>
                    <model behaviour="paragraph" useSourceRendition="true">
            <outputRendition>
            text-align: justify;
            </outputRendition>
        </model>
                </elementSpec>
                
                <elementSpec ident="lb" mode="change">
                    
                    <model behaviour="block" useSourceRendition="true">
            <outputRendition xml:space="preserve">
            
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="persName" mode="add">
                    <model output="latex" behaviour="inline">
            <param name="id" value="substring-after(@ref, '#')"/>
            <pb:template>\glslink{[[id]]}{[[content]]}</pb:template>
        </model>
                    <model output="print" behaviour="inline">
            <outputRendition>
            color: #1565c0;
            </outputRendition>
        </model>
                    <model predicate="parent::person" behaviour="inline">
            <outputRendition scope="after">
            content: ': ';
            </outputRendition>
            <outputRendition>
            font-weight: bold;
            </outputRendition>
        </model>
                    <model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@ref, '#'), root(.))"/>
            <outputRendition>
            color: #1565c0;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="person" mode="add">
                    <model output="latex" behaviour="glossary">
            <param name="name" value="persName/text()"/>
            <param name="note" value="note"/>
        </model>
                    <model predicate="parent::listPerson" behaviour="inline"/>
                </elementSpec>
                <elementSpec ident="note" mode="change">
                    <model predicate="parent::person" behaviour="inline">
            <outputRendition scope="selected">
            content: ': ';
            </outputRendition>
        </model>
                </elementSpec>
        <elementSpec ident="placeName" mode="add">
                    <model output="latex" behaviour="inline">
            <param name="id" value="substring-after(@ref, '#')"/>
            <pb:template>\glslink{[[id]]}{[[content]]}</pb:template>
        </model>
                    <model output="print" behaviour="inline">
            <outputRendition>
            color: #ef6c00;
            </outputRendition>
        </model>
                    <model predicate="parent::place" behaviour="inline">
            <outputRendition scope="after">
            content: ': ';
            </outputRendition>
            <outputRendition>
            font-weight: bold;
            </outputRendition>
        </model>
                    <model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@ref, '#'), root(.))"/>
            <outputRendition>
            color: #ef6c00;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="orgName" mode="add">
                    <model output="print" behaviour="inline">
            <outputRendition>
            color: #2e7d32;
            </outputRendition>
        </model>
                    <model predicate="parent::org" behaviour="inline">
            <outputRendition scope="after">
            content: ': ';
            </outputRendition>
            <outputRendition>
            font-weight: bold;
            </outputRendition>
        </model>
                    <model behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="id(substring-after(@ref, '#'), root(.))"/>
            <outputRendition>
            color: #2e7d32;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="title" mode="change">
                    <model predicate="$parameters?header='short'" behaviour="heading">
            <param name="level" value="5"/>
        </model>
                    <modelSequence predicate="parent::titleStmt/parent::fileDesc">
            <model predicate="preceding-sibling::title" behaviour="text">
                <param name="content" value="' — '"/>
            </model>
            <model behaviour="inline"/>
        </modelSequence>
                    <model predicate="not(@level) and parent::bibl" behaviour="inline"/>
                    <modelSequence predicate="@level='m' or not(@level)">
            <model behaviour="inline">
                <outputRendition>
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="ancestor::biblFull" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='s' or @level='j'">
            <model behaviour="inline">
                <outputRendition>
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (  ancestor::biblFull)" behaviour="text">
                <param name="content" value="', '"/>
            </model>
        </modelSequence>
                    <modelSequence predicate="@level='u' or @level='a'">
            <model behaviour="inline">
                <outputRendition>
                font-style: italic;
                </outputRendition>
            </model>
            <model predicate="following-sibling::* and     (    ancestor::biblFull)" behaviour="text">
                <param name="content" value="'. '"/>
            </model>
        </modelSequence>
                    <model behaviour="inline">
            <outputRendition>
            font-style: italic;
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="seg" mode="change">
                    <model output="latex" behaviour="inline">
            <pb:template>\pstart [[content]] \pend</pb:template>
        </model>
                    <model behaviour="webcomponent" useSourceRendition="true">
            <param name="name" value="'pb-highlight'"/>
            <param name="key" value="replace(@xml:id, &#34;^\w\.(.*)$&#34;, &#34;$1&#34;)"/>
        </model>
                </elementSpec>
                <elementSpec ident="titleStmt" mode="change">
                    <model output="latex" behaviour="meta">
            <param name="content" value="."/>
        </model>
                    <model output="fo" behaviour="heading"/>
                    <modelSequence output="web" predicate="$parameters?header='short'">
            <model behaviour="link">
                <param name="content" value="title[1]"/>
                <param name="uri" value="$parameters?doc"/>
            </model>
            <model behaviour="block">
                <param name="content" value="subsequence(title, 2)"/>
            </model>
            <model behaviour="block">
                <param name="content" value="author"/>
            </model>
        </modelSequence>
                    <model output="web" predicate="$parameters?header='letter'" behaviour="inline">
            <param name="content" value="title[not(@type)]"/>
        </model>
                    <model output="web" behaviour="heading">
            <param name="level" value="4"/>
        </model>
                </elementSpec>
                <elementSpec ident="teiHeader" mode="change">
                    <model output="latex" behaviour="block">
            <param name="content" value="(fileDesc/titleStmt/title[not(@type)], profileDesc/correspDesc)"/>
            <pb:template>\def\volume{[[content]]}</pb:template>
        </model>
                    <model output="fo" behaviour="omit"/>
                    <model output="web" predicate="$parameters?header='short'" behaviour="block"/>
                    <model output="web" predicate="$parameters?header='letter'" behaviour="heading">
            <param name="content" value="(fileDesc/titleStmt/title[not(@type)], profileDesc/correspDesc)"/>
            <param name="level" value="5"/>
        </model>
                    <model output="web" behaviour="metadata"/>
                </elementSpec>
                <elementSpec ident="correspAction" mode="add">
                    <model predicate="@type='sent'" behaviour="inline">
            <param name="content" value="(placeName, ', ', date)"/>
            <outputRendition scope="before">
            content: ' — ';
            </outputRendition>
        </model>
                </elementSpec>
                <elementSpec ident="date" mode="change">
                    <model output="print" predicate="text()" behaviour="inline"/>
                    <model output="print" predicate="@when and not(text())" behaviour="inline">
            <param name="content" value="@when"/>
        </model>
                    <model output="web" predicate="@when" behaviour="alternate">
            <param name="default" value="."/>
            <param name="alternate" value="format-date(xs:date(@when), '[D1o] [MNn] [Y]', (session:get-attribute('lang'), 'en')[1], (), ())"/>
        </model>
                    <model predicate="text()" behaviour="inline"/>
                </elementSpec>
            <elementSpec ident="place" mode="add">
                    <model output="latex" behaviour="glossary">
            <param name="name" value="placeName/text()"/>
            <param name="note" value="note"/>
        </model>
                    <model behaviour="inline"/>
                </elementSpec>
            </schemaSpec>
        </body>
    </text>
</TEI>